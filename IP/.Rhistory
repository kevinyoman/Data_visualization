str(vids)
# Please type your code here
vids %>% glimpse()
# Please run the code down below
vids$category_id <- as.factor(vids$category_id)
# Please type your code here
vids_clean <-
# Please run the code down below
vids_clean %>%
filter(category_id == "Music") %>%
group_by(publish_wday, publish_when) %>%
summarise(mean_views = mean(views),
max_likes = max(likes)) %>%
# ungroup() %>%
top_n(n=1)
# Please run the code down below
vids_clean %>%
filter(category_id == "Music") %>%
group_by(publish_wday, publish_when) %>%
summarise(mean_views = mean(views)) %>%
top_n(1)
# Please type your code here
vids_agg <-
vids_clean %>%
group_by(channel_title) %>%
summarise(mean_views = mean(views)) %>%
ungroup()
# Please type your code here
vids_clean <- vids %>%
mutate(publish_hour = as.factor(publish_hour),
timetotrend = as.integer(timetotrend)) %>%
mutate_if(.predicate = is.character,
.fun = as.factor)
vids %>%
mutate_at(.vars=c("channel_title","category_id","publish_when","publish_wday","publish_hour"),
.funs=as.factor) %>%
mutate(timetotred=as.integer(timetotrend))
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
# scientific notation
options(scipen = 9999)
knitr::include_graphics("assets/Interactive Plotting.png")
# install.packages("tidyverse")
library(tidyverse)
# Please type your code here
vids <- read_csv("data_input/youtubetrends.csv")
str(vids)
# Please type your code here
vids2 <- read.csv("data_input/youtubetrends.csv")
str(vids2)
# Please run the code down below
vids[,c("trending_date", "title")]
# Please type your code here
select(.data = vids, trending_date, title)
# Please type your code here
filter(.data=vids,
category_id %in% 'Music',
views > 1e6)
# OR use |
filter(.data=vids,
category_id %in% 'Music' | views > 1e6)
# Please type your code here
# Please type your code here
tes <-
vids %>%
select(title,category_id,likes) %>%
filter(likes > 5e4, category_id %in% c('Entertainment','Comedy'))
# ambil value selain , gunakan !category_id %in% c('Entertainment','Comedy')
# Please run the code down below
str(vids)
# Please type your code here
vids %>% glimpse()
# Please run the code down below
vids$category_id <- as.factor(vids$category_id)
# Please type your code here
vids_clean <-
# Settingan Agar tidak muncul numeric value with scientific format
options(scipen = 9999)
# List Library
library(tidyverse)
library(scales)
library(flexdashboard)
library(plotly)
library(glue)
# Data
vids <- read_csv("data_input/youtubetrends.csv")
# Data Cleansing
vids_clean <- vids %>%
mutate(timetotrend = as.integer(timetotrend),
category_id = as.factor(category_id),
channel_title = as.factor(channel_title),
publish_hour = as.factor(publish_hour),
publish_when = as.factor(publish_when),
publish_wday = as.factor(publish_wday)) %>%
mutate(likes_per_view = likes / views,
dislikes_per_view = dislikes / views,
comment_per_view = comment_count / views)
#  create df
vids_count <- vids_clean %>%
group_by(category_id) %>%
summarise(freq = n())%>%
arrange(-freq) %>%
mutate(label = glue("Category: {category_id}
Freq: {freq}"))
#  plot statis
plot1 <-
ggplot(data=vids_count,mapping=aes(x=freq,y=reorder(category_id,freq),text=label))+
geom_col(mapping=aes(fill=freq))+
scale_fill_gradient(low='red',high='black') +
labs(title = 'Trending Categories on Youtube US 2017' ,
x = 'Video Count',
y = NULL) +
theme_minimal() +
theme(legend.position = "none")
#  plot interactive
ggplotly(p=plot1, tooltip='text')
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::label_name(mean_views)}"))
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::label_name(mean_views)}"))
# Please type your code here
vids_agg <-
vids_clean %>%
group_by(channel_title) %>%
summarise(mean_views = mean(views)) %>%
ungroup()
# Please run the code down below
vids_clean %>%
filter(category_id == "Music") %>%
group_by(publish_wday, publish_when) %>%
summarise(mean_views = mean(views),
max_likes = max(likes)) %>%
# ungroup() %>%
top_n(n=1)
# Please type your code here
plot2 <-
ggplot(data=vids_top_channel,mapping=aes(x=mean_views,y=reorder(channel_title,mean_views), text=label, color = mean_views))+
# geom_col(mapping=aes(fill=mean_views))+
geom_segment(mapping=aes(x=0, xend=mean_views, yend=channel_title ))+
geom_point(color='blue', size=4, alpha=0.6)+
scale_color_gradient(low='red',high='black')+
scale_x_continuous(labels = scales::label_comma(big.mark=".")) +
labs(x = 'Mean Views',
y = NULL,
title = 'Top 10 YouTube Channels in Entertainment') +
theme_minimal() +
theme(legend.position = "none")
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::label_name(mean_views)}"))
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::label_names(mean_views)}"))
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::label_comma(mean_views)}"))
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::label_name(mean_views)}"))
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::comma(mean_views)}"))
vids_top_channel
vids_top_channel
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::comma(mean_views)}"))
vids_top_channel
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::label_comma(mean_views)}"))
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::label_comma(mean_views,big.mark='.')}"))
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10) %>%
mutate(label=glue("Channel Title: {channel_title}
Mean Views: {scales::comma(mean_views)}"))
vids_top_channel
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
# scientific notation
options(scipen = 9999)
knitr::include_graphics("assets/Interactive Plotting.png")
# install.packages("tidyverse")
library(tidyverse)
# Please type your code here
vids <- read_csv("data_input/youtubetrends.csv")
str(vids)
# Please type your code here
vids2 <- read.csv("data_input/youtubetrends.csv")
str(vids2)
# Please run the code down below
vids[,c("trending_date", "title")]
# Please type your code here
select(.data = vids, trending_date, title)
# Please type your code here
filter(.data=vids,
category_id %in% 'Music',
views > 1e6)
# OR use |
filter(.data=vids,
category_id %in% 'Music' | views > 1e6)
# Please type your code here
# Please type your code here
tes <-
vids %>%
select(title,category_id,likes) %>%
filter(likes > 5e4, category_id %in% c('Entertainment','Comedy'))
# ambil value selain , gunakan !category_id %in% c('Entertainment','Comedy')
# Please run the code down below
str(vids)
# Please type your code here
vids %>% glimpse()
# Please run the code down below
vids$category_id <- as.factor(vids$category_id)
# Please type your code here
vids_clean <-
vids_clean %>%
filter(category_id %in% "Education") %>%
group_by(channel_title) %>%
summarise(mean_views = mean(views)) %>%
arrange(-mean_views) %>%
head(10) %>%
mutate(label = glue("Channel Title: {channel_title}
Mean Views: {scales::comma(mean_views)}"))
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
# scientific notation
options(scipen = 9999)
knitr::include_graphics("assets/Interactive Plotting.png")
# install.packages("tidyverse")
library(tidyverse)
# Please type your code here
vids <- read_csv("data_input/youtubetrends.csv")
str(vids)
# Please type your code here
vids2 <- read.csv("data_input/youtubetrends.csv")
str(vids2)
# Please run the code down below
vids[,c("trending_date", "title")]
# Please type your code here
select(.data = vids, trending_date, title)
# Please type your code here
filter(.data=vids,
category_id %in% 'Music',
views > 1e6)
# OR use |
filter(.data=vids,
category_id %in% 'Music' | views > 1e6)
# Please type your code here
# Please type your code here
tes <-
vids %>%
select(title,category_id,likes) %>%
filter(likes > 5e4, category_id %in% c('Entertainment','Comedy'))
# ambil value selain , gunakan !category_id %in% c('Entertainment','Comedy')
# Please run the code down below
str(vids)
# Please type your code here
vids %>% glimpse()
# Please run the code down below
vids$category_id <- as.factor(vids$category_id)
# Please type your code here
vids_clean <-
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10)
# Please run the code down below
vids_clean %>%
filter(category_id == "Music") %>%
group_by(publish_wday, publish_when) %>%
summarise(mean_views = mean(views),
max_likes = max(likes)) %>%
# ungroup() %>%
top_n(n=1)
# Please type your code here
vids_top_channel <-
vids_clean %>%
filter(category_id=='Entertainment') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10)
# Please run the code down below
vids_clean %>%
filter(category_id == "Music") %>%
group_by(publish_wday, publish_when) %>%
summarise(mean_views = mean(views),
max_likes = max(likes)) %>%
# ungroup() %>%
top_n(n=1)
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>"
)
# scientific notation
options(scipen = 9999)
knitr::include_graphics("assets/Interactive Plotting.png")
# install.packages("tidyverse")
library(tidyverse)
# Please type your code here
vids <- read_csv("data_input/youtubetrends.csv")
str(vids)
# Please type your code here
vids2 <- read.csv("data_input/youtubetrends.csv")
str(vids2)
# Please run the code down below
vids[,c("trending_date", "title")]
# Please type your code here
select(.data = vids, trending_date, title)
# Please type your code here
filter(.data=vids,
category_id %in% 'Music',
views > 1e6)
# OR use |
filter(.data=vids,
category_id %in% 'Music' | views > 1e6)
# Please type your code here
# Please type your code here
tes <-
vids %>%
select(title,category_id,likes) %>%
filter(likes > 5e4, category_id %in% c('Entertainment','Comedy'))
# ambil value selain , gunakan !category_id %in% c('Entertainment','Comedy')
# Please run the code down below
str(vids)
# Please type your code here
vids %>% glimpse()
# Please run the code down below
vids$category_id <- as.factor(vids$category_id)
# Please type your code here
vids_clean <-
# Settingan Agar tidak muncul numeric value
options(scipen = 9999)
# List Library
library(tidyverse)
library(scales)
library(flexdashboard)
library(plotly)
library(glue)
# Data
vids <- read_csv("data_input/youtubetrends.csv")
# Data Cleansing
vids_clean <- vids %>%
mutate(timetotrend = as.integer(timetotrend),
category_id = as.factor(category_id),
channel_title = as.factor(channel_title),
publish_hour = as.factor(publish_hour),
publish_when = as.factor(publish_when),
publish_wday = as.factor(publish_wday)) %>%
mutate(likes_per_view = likes / views,
dislikes_per_view = dislikes / views,
comment_per_view = comment_count / views)
vids_clean %>%
filter(category_id=='Education') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10)
vids_top_channel
vids_clean %>%
filter(category_id=='Education') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10)
plot2 <-
ggplot(data = vids_top_channel, mapping = aes(x = mean_views,
y = channel_title,
color = mean_views,
text = label)) +
geom_segment(mapping = aes(x = 0, xend = mean_views,
y = reorder(channel_title, mean_views), yend = channel_title)) +
geom_point() +
scale_color_gradient(low = "red", high = "black") +
scale_x_continuous(labels = label_number(big.mark = ".")) +
labs(x = 'Mean Views',
y = NULL,
title = 'Top 10 YouTube Channels in Entertainment') +
theme_minimal() +
theme(legend.position = "none")
vids_top_channel <-
vids_clean %>%
filter(category_id=='Education') %>%
group_by(channel_title) %>%
summarise(mean_views=mean(views)) %>%
arrange(desc(mean_views)) %>%
head(10)
plot2 <-
ggplot(data = vids_top_channel, mapping = aes(x = mean_views,
y = channel_title,
color = mean_views,
text = label)) +
geom_segment(mapping = aes(x = 0, xend = mean_views,
y = reorder(channel_title, mean_views), yend = channel_title)) +
geom_point() +
scale_color_gradient(low = "red", high = "black") +
scale_x_continuous(labels = label_number(big.mark = ".")) +
labs(x = 'Mean Views',
y = NULL,
title = 'Top 10 YouTube Channels in Entertainment') +
theme_minimal() +
theme(legend.position = "none")
# Pembuatan visual interaktif
ggplotly(p = plot2, tooltip = "text")
