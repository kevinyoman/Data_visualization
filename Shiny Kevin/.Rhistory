getwd()
library(DT) # datatable
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
# Settingan Agar tidak muncul numeric value
options(scipen = 9999)
# List Library
library(tidyverse)
library(scales)
library(flexdashboard)
library(plotly)
library(glue)
# Data
vids <- read_csv("data_input/youtubetrends.csv")
# Data Cleansing
vids_clean <- vids %>%
mutate(timetotrend = as.integer(timetotrend),
category_id = as.factor(category_id),
channel_title = as.factor(channel_title),
publish_hour = as.factor(publish_hour),
publish_when = as.factor(publish_when),
publish_wday = as.factor(publish_wday)) %>%
mutate(likes_per_view = likes / views,
dislikes_per_view = dislikes / views,
comment_per_view = comment_count / views)
vids_top_channel <-
vids_clean %>%
filter(category_id %in% "Education") %>%
group_by(channel_title) %>%
summarise(mean_views = mean(views)) %>%
arrange(-mean_views) %>%
head(10) %>%
mutate(label = glue("Channel Title: {channel_title}
Mean Views: {scales::comma(mean_views)}"))
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.packages("rsconnect")
library(rsconnect)
rsconnect::setAccountInfo(name='kevinnp',
token='333CA717B108ACC03108053857430166',
secret='YNxE0rGYqyx1y/yc3PpOzEaNAiCfjjym+n63gbCm')
shiny::runApp()
runApp()
runApp()
runApp()
shiny::runApp()
